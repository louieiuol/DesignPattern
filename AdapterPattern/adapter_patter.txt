适配器模式

定义: 
是作为两个不兼容接口之间的桥梁, 这种类型的设计模式属于结构型模式, 结合了两个独立接口的功能
这种模式涉及到一个单一的类, 该类负责加入独立的或不兼容的接口功能.

意图:
将一个类的接口转换成客户希望的另外一个接口, 适配器模式使得原本由于接口不兼容而不能一起工作的类可以一起工作

主要解决:
在软件系统中, 常常将一些现存对象放到新环境中, 而新环境要求的接口是对象不能满足的

何时使用:
1. 系统需要使用现有的类, 而此类的接口不符合系统需要
2. 想要建立一个可以重复使用的类, 用于与一些彼此之间没有太大关联的一些类, 这些类不一定有一致的接口
3. 通过接口转化, 将类插入到另一个类中

如何解决:
继承或依赖

关键代码:
适配器继承或依赖已有的对象, 实现想要的目标接口

应用实例:
1. 美国电器 110v 中国电器 220v 就要有个适配器将110V转化为220V
2. Java中的 jdbc

优点
1. 可以让任意两个没有关联的类一起运行
2. 提高了类的复用
3. 增加了类的透明度
4. 灵活性好

缺点
1. 过多的使用适配器, 系统非常凌乱
2. Java 最多继承一个类, 所以至多只能适配一个适配者类, 而且目标必须是抽象类

eg:


已有接口: 
		 <<interface>> 
		 MediaPlayer
		 play(String audioType, String fileName): void
		/ 									\
	   / implements	 	 			 		 \	implements
	  /				  	  			  		  \	
MediaAdapter			   						AudioPlayer						  				使用
-advancedMediaPlayer: 						-mediaAdapter(String audioType): MediaAdapter   <---------- AdapterPatternDemo
AdvancedMediaPlayer	  					使用	+play(String audioType, String fileName): void
+MediaAdapter(String audioType): void <----- 
+play(String audioType, String fileName): void			

			｜
			｜
			｜ 使用
			｜
			｜
新的接口:
			  <<interface>> 
			AdvancedMediaPlayer
			+playVic(String fileName): void
			+playMp4(String fileName): void
		  /					           \
 		 /		  						\
 		/					 			 \	
 VlcPlayer 									Mp4Player
 +playVLC(String fileName): void			+playVCL(String fileName): void
 +playMp4(String fileName): void		    +playMp4(String fileName): void