迭代器模式

意图:
Iterator Pattern用于顺序访问集合对象的元素, 不需要知道集合对象的底层表示, 属于行为型模式

主要解决:
遍历一个聚合对象

如何解决:
把在元素之间游走的责任交给迭代器, 而不是聚合对象

关键代码:
定义并实现接口: hasNext, next

应用实例:
Java中的iterator

优点:
1. 支持不同的方式遍历一个聚合对象
2. 简化了聚合类
3. 在一个聚合上可以多个遍历
4. 无需修改原有代码

缺点:
增加了系统的复杂性
																						<<interface>>
											<<Interface>>          						Iterator
											  Container									+hasNext(): boolean
										getIterator(): iterator							+next(): Object
												^											^
												|											|
												| implements								| implements
												|											|
						 uses					|							has				|
IteratorPatternDemo		-------->			NameRepository				----------->	NameIterator
+main(): void								-name: String[] 							+hasNext(): boolean
											+getIterator(): Iterator